name: "Java CI"
on:
  push:
    branches:
      - '[6-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[6-9]+.[0-9]+.x'
  workflow_dispatch:
jobs:
  build:
    name: "Build Project"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17', '21']
    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ matrix.java }}
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "üî® Run Build"
        id: build
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew build
      - name: "‚úÖ Verify CLI"
        if: success()
        run: |
          cp grails-cli/build/distributions/grails-cli-*.zip cli.zip
          unzip cli -d tmp
          mv tmp/grails-cli-* tmp/cli
          ./tmp/cli/bin/grails --version
      - name: "üì§ Publish to Sonatype OSSRH"
        id: publish
        if: steps.build.outcome == 'success' && github.event_name == 'push' && matrix.java == '17'
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publishToSonatype
  linux:
    name: "Build Linux Native CLI"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "üì• Checkout the repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup GraalVM CE"
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "üì∏ Build the Native Image"
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew grails-cli:nativeCompile --no-daemon
      - name: "‚úÖ Verify Build"
        run: ./grails-cli/build/native/nativeCompile/grails --version
      - name: "‚úÖ Verify Create App"
        run: ./grails-cli/build/native/nativeCompile/grails create-app test
      - name: "üì¶ Package Build"
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          mkdir -p grails-linux-amd64-snapshot/bin
          mv ./grails-cli/build/native/nativeCompile/grails grails-linux-amd64-snapshot/bin
          cp ./LICENSE grails-linux-amd64-snapshot/
          zip -r grails-linux-amd64-snapshot.zip ./grails-linux-amd64-snapshot
      - name: "üì§ Upload Artifact to Workflow Summary Page"
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/7.0.x'
        uses: actions/upload-artifact@v4
        with:
          name: grails-linux-amd64-snapshot
          path: grails-linux-amd64-snapshot.zip
  macos:
    name: "Build OS X Intel Native CLI"
    runs-on: macos-13
    needs: build
    steps:
      - name: "üì• Checkout the repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup GraalVM CE"
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "üì∏ Build the Native Image"
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew grails-cli:nativeCompile --no-daemon
      - name: "‚úÖ Verify Build"
        run: ./grails-cli/build/native/nativeCompile/grails --version
      - name: "‚úÖ Verify Create App"
        run: ./grails-cli/build/native/nativeCompile/grails create-app test
      - name: "üì¶ Package Build"
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          mkdir -p grails-darwin-amd64-snapshot/bin
          mv ./grails-cli/build/native/nativeCompile/grails grails-darwin-amd64-snapshot/bin
          cp ./LICENSE grails-darwin-amd64-snapshot/
          zip -r grails-darwin-amd64-snapshot.zip ./grails-darwin-amd64-snapshot -x '*.DS_Store*' -x '__MAC_OSX'
      - name: "üì§ Upload Artifact to Workflow Summary Page"
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/7.0.x'
        uses: actions/upload-artifact@v4
        with:
          name: grails-darwin-amd64-snapshot
          path: grails-darwin-amd64-snapshot.zip
  macos-arm:
    name: "Build OS X Arm Native CLI"
    runs-on: macos-latest
    needs: [build]
    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup GraalVM CE"
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "üì∏ Build the Native Image"
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew grails-cli:nativeCompile --no-daemon
      - name: "‚úÖ Verify Build"
        run: ./grails-cli/build/native/nativeCompile/grails --version
      - name: "‚úÖ Verify Create App"
        run: ./grails-cli/build/native/nativeCompile/grails create-app test
      - name: "üì¶ Package Build"
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          mkdir -p grails-darwin-aarch64-snapshot/bin
          mv ./grails-cli/build/native/nativeCompile/grails grails-darwin-aarch64-snapshot/bin
          cp ./LICENSE grails-darwin-aarch64-snapshot/
          zip -r grails-darwin-aarch64-snapshot.zip grails-darwin-aarch64-snapshot/ -x '*.DS_Store*' -x '__MAC_OSX'
      - name: "üì§ Upload Artifact to Workflow Summary Page"
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/7.0.x'
        uses: actions/upload-artifact@v4
        with:
          name: grails-darwin-aarch64-snapshot
          path: grails-darwin-aarch64-snapshot.zip
  windows:
    name: "Build Windows Native CLI"
    runs-on: windows-latest
    needs: build
    steps:
      - name: "üì• Checkout the repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup GraalVM CE"
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm-community'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "üì∏ Build the Native Image"
        env:
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew grails-cli:nativeCompile --no-daemon
      - name: "‚úÖ Verify Build (Powershell)"
        shell: powershell
        run: ./grails-cli/build/native/nativeCompile/grails.exe --version
      - name: "‚úÖ Verify Create App (Powershell)"
        shell: powershell
        run: ./grails-cli/build/native/nativeCompile/grails.exe create-app test
      - name: "‚úÖ Verify Build (CMD)"
        shell: cmd
        run: grails-cli\\build\\native\\nativeCompile\\grails --version
      - name: "‚úÖ Verify Create App (CMD)"
        shell: cmd
        run: grails-cli\\build\\native\\nativeCompile\\grails create-app test2
      - name: "üì¶ ZIP Archive"
        run: |
          New-Item "./grails-win-amd64-snapshot/bin" -ItemType Directory -ea 0
          Move-Item -Path ./grails-cli/build/native/nativeCompile/grails.exe -Destination "./grails-win-amd64-snapshot/bin"
          Copy-Item "./LICENSE" -Destination "./grails-win-amd64-snapshot"
          Compress-Archive -Path "./grails-win-amd64-snapshot" -Update -DestinationPath ./grails-win-amd64-snapshot.zip
      - name: "üì§ Upload Artifact to Workflow Summary Page"
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/7.0.x'
        uses: actions/upload-artifact@v4
        with:
          name: grails-win-amd64-snapshot
          path: ./grails-win-amd64-snapshot.zip